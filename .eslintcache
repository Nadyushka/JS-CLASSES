[{"C:\\it-incubator\\JS-CLASSES\\src\\index.tsx":"1","C:\\it-incubator\\JS-CLASSES\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"2","C:\\it-incubator\\JS-CLASSES\\src\\redux\\actions.ts":"3","C:\\it-incubator\\JS-CLASSES\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"4","C:\\it-incubator\\JS-CLASSES\\src\\redux\\currencyReducer.ts":"5","C:\\it-incubator\\JS-CLASSES\\src\\lessons\\lesson1\\lesson1.tsx":"6","C:\\it-incubator\\JS-CLASSES\\src\\redux\\selectors.ts":"7","C:\\it-incubator\\JS-CLASSES\\src\\lessons\\lesson2\\lesson2.ts":"8"},{"size":319,"mtime":1609752860853,"results":"9","hashOfConfig":"10"},{"size":3871,"mtime":1609757735301,"results":"11","hashOfConfig":"10"},{"size":1733,"mtime":1673178359796,"results":"12","hashOfConfig":"10"},{"size":5517,"mtime":1673181208707,"results":"13","hashOfConfig":"10"},{"size":1856,"mtime":1673178262362,"results":"14","hashOfConfig":"10"},{"size":949,"mtime":1673180803659,"results":"15","hashOfConfig":"10"},{"size":608,"mtime":1673181208695,"results":"16","hashOfConfig":"10"},{"size":4089,"mtime":1673723862748,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"yxaysp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\it-incubator\\JS-CLASSES\\src\\index.tsx",[],["36","37"],"C:\\it-incubator\\JS-CLASSES\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"C:\\it-incubator\\JS-CLASSES\\src\\redux\\actions.ts",[],"C:\\it-incubator\\JS-CLASSES\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["38","39","40"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport { CurrencyState, CurrencyType } from '../../redux/currencyReducer';\r\n// import { Dispatch } from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    СhangeCurrentCurrencyAC,\r\n    useDispatch,\r\n    // CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useSelector} from 'react-redux';\r\nimport {\r\n    // selectAmountOfBYN,\r\n    // selectAmountOfCurrency,\r\n    // selectCurrencies,\r\n    // selectCurrentCurrency, selectIsBuying,\r\n    selectCurrency,\r\n} from \"../../redux/selectors\";\r\n\r\nconst CurrencyEContainer:React.FunctionComponent = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // const currencies = useSelector(selectCurrencies)\r\n    // const currentCurrency = useSelector(selectCurrentCurrency)\r\n    // const isBuying = useSelector(selectIsBuying)\r\n    // const amountOfBYN = useSelector(selectAmountOfBYN)\r\n    // const amountOfCurrency = useSelector(selectAmountOfCurrency)\r\n\r\nconst {currencies,currentCurrency,isBuying,amountOfBYN,amountOfCurrency} = useSelector(selectCurrency)\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    //     // setCurrencyAmount,\r\n    //     // setAction,\r\n    //     // changeCurrency,\r\n    //     // ChangeCurrencyFieldAC,\r\n    //     // ChangeActionAC,\r\n    //     // СhangeCurrentCurrencyAC,\r\n    // } = props;\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value))\r\n                } else {\r\n                   // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    dispatch( ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)))\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value))\r\n                } else {\r\n                    // setCurrencyAmount( (+Number(value).toFixed(2) / currencyRate).toFixed(2),value);\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2),value))\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n       // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        e.currentTarget.dataset.action === 'buy' ?  dispatch(ChangeActionAC(true)) :  dispatch(ChangeActionAC(false));\r\n\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n      //  e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency &&  dispatch(СhangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ( { currency } : {currency: CurrencyState} ): CurrencyState => {\r\n//     return {\r\n//         currencies: currency.currencies,\r\n//         currentCurrency: currency.currentCurrency,\r\n//         isBuying: currency.isBuying,\r\n//         amountOfBYN: currency.amountOfBYN,\r\n//         amountOfCurrency: currency.amountOfCurrency,\r\n//     };\r\n// };\r\n\r\n// @ts-ignore\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) : any => {\r\n//     return {\r\n//         setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n//             dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//         },\r\n//         setAction(isBuying: boolean) {\r\n//             dispatch(ChangeActionAC(isBuying));\r\n//         },\r\n//         changeCurrency(currency: string) {\r\n//             dispatch(СhangeCurrentCurrencyAC(currency));\r\n//         },\r\n//     };\r\n// };\r\n\r\n// @ts-ignore\r\n\r\n// const connector = connect(mapStateToProps, {\r\n//     ChangeCurrencyFieldAC,\r\n//     ChangeActionAC,\r\n//     СhangeCurrentCurrencyAC,\r\n// });\r\n\r\n//const connector = connect(mapStateToProps);\r\n\r\n// type TProps = ConnectedProps<typeof connector>;\r\n\r\n// export default connector(CurrencyEContainer);\r\n\r\nexport default CurrencyEContainer\r\n\r\n","C:\\it-incubator\\JS-CLASSES\\src\\redux\\currencyReducer.ts",["41"],"C:\\it-incubator\\JS-CLASSES\\src\\lessons\\lesson1\\lesson1.tsx",["42"],"C:\\it-incubator\\JS-CLASSES\\src\\redux\\selectors.ts",[],"C:\\it-incubator\\JS-CLASSES\\src\\lessons\\lesson2\\lesson2.ts",["43","44","45","46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":23},{"ruleId":"52","severity":1,"message":"56","line":12,"column":9,"nodeType":"54","messageId":"55","endLine":12,"endColumn":16},{"ruleId":"52","severity":1,"message":"57","line":12,"column":18,"nodeType":"54","messageId":"55","endLine":12,"endColumn":32},{"ruleId":"52","severity":1,"message":"58","line":72,"column":11,"nodeType":"54","messageId":"55","endLine":72,"endColumn":19},{"ruleId":"52","severity":1,"message":"59","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":33},{"ruleId":"52","severity":1,"message":"60","line":51,"column":7,"nodeType":"54","messageId":"55","endLine":51,"endColumn":14},{"ruleId":"52","severity":1,"message":"61","line":52,"column":7,"nodeType":"54","messageId":"55","endLine":52,"endColumn":15},{"ruleId":"52","severity":1,"message":"62","line":83,"column":5,"nodeType":"54","messageId":"55","endLine":83,"endColumn":13},{"ruleId":"52","severity":1,"message":"63","line":95,"column":7,"nodeType":"54","messageId":"55","endLine":95,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":132,"column":1,"nodeType":"66","endLine":133,"endColumn":3},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'dispatch' is assigned a value but never used.","'CurrencyExchangeContainer' is defined but never used.","'counter' is assigned a value but never used.","'counter2' is assigned a value but never used.","'counter1' is assigned a value but never used.","'superSum' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]